{"version":3,"sources":["store/store.js","components/Table.js","App.js","index.js"],"names":["initialState","tableData","selectedRows","isLoading","reducers","combineReducers","state","action","type","payload","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Table","selectedRowsData","useSelector","dispatch","useDispatch","useEffect","fetch","then","response","json","className","style","height","width","rows","columns","field","headerName","pageSize","disableColumnMenu","checkboxSelection","hideFooterRowCount","loading","onSelectionChange","newSelection","rowIds","length","arr","namesArr","forEach","el","includes","id","toString","push","firstName","join","getFirstNameById","App","ReactDOM","render","document","getElementById"],"mappings":"sPAEMA,EAAe,CACnBC,UAAW,GACXC,aAAc,GACdC,WAAW,GA0DPC,EAAWC,YAAgB,CAC/BH,aAV0B,WAAgD,IAA/CI,EAA8C,uDAAtCN,EAAaE,aAAcK,EAAW,uCACzE,OAAQA,EAAOC,MACb,IAAK,uBACH,OAAOD,EAAOE,QAChB,QACE,OAAOH,IAMXL,UApBuB,WAA6C,IAA5CK,EAA2C,uDAAnCN,EAAaC,UAAWM,EAAW,uCACnE,OAAQA,EAAOC,MACb,IAAK,oBACH,OAAOD,EAAOE,QAChB,QACE,OAAOH,IAgBXH,UAhCuB,WAA6C,IAA5CG,EAA2C,uDAAnCN,EAAaG,UAAWI,EAAW,uCACnE,OAAQA,EAAOC,MACb,IAAK,mBACH,OAAe,EACjB,IAAK,oBACH,OAAe,EACjB,QACE,OAAOF,MA4BAI,EAAQC,YAAYP,EAAUQ,OAAOC,8BAAgCD,OAAOC,gC,OCK1EC,MApEf,WAEE,IAOMC,EAAmBC,aAAY,SAAAV,GAAK,OAAIA,EAAMJ,gBAC9CD,EAAYe,aAAY,SAAAV,GAAK,OAAIA,EAAML,aACvCE,EAAYa,aAAY,SAAAV,GAAK,OAAIA,EAAMH,aACvCc,EAAWC,cA2BjB,OAJAC,qBAAU,WAVRF,EDtBK,CACLT,KAAM,qBCsBCY,MAAM,2FACZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJN,EDdG,CACLT,KAAM,oBACNC,QCYmBc,IACjBN,EDrBG,CACLT,KAAM,2BC2BL,IAGD,sBAAKgB,UAAU,QAAQC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,QAApD,UACE,yIAGA,cAAC,IAAD,CACEC,KAAM3B,EACN4B,QA5CU,CACd,CAAEC,MAAO,YAAaC,WAAY,qBAAOJ,MAAO,KAChD,CAAEG,MAAO,WAAYC,WAAY,6CAAWJ,MAAO,KACnD,CAAEG,MAAO,MAAOC,WAAY,6CAAWJ,MAAO,MA0C1CK,SAAU,EACVC,mBAAiB,EACjBC,mBAAiB,EACjBC,oBAAkB,EAClBC,QAASjC,EACTkC,kBAAmB,SAAAC,GACjBrB,ED/BD,CACLT,KAAM,uBACNC,QC6B+B6B,EAAaC,YAI1C,qBAAKf,UAAU,iBAAf,SAEIT,EAAiByB,OAAjB,oFA7CiB,SAACC,GACxB,IAAMC,EAAW,GAMjB,OALAzC,EAAU0C,SAAQ,SAAAC,GACZH,EAAII,SAASD,EAAGE,GAAGC,aACrBL,EAASM,KAAKJ,EAAGK,cAGdP,EAASQ,KAAK,MAuCIC,CAAiBpC,IAClC,SCzDGqC,MARf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,cAAC,EAAD,OCEN6B,IAASC,OACP,cAAC,IAAD,CAAU5C,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEF6C,SAASC,eAAe,W","file":"static/js/main.72f6e060.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux';\r\n\r\nconst initialState = {\r\n  tableData: [],\r\n  selectedRows: [],\r\n  isLoading: false\r\n}\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: 'isLoading/enable',\r\n  }\r\n}\r\n\r\nexport const unsetLoading = () => {\r\n  return {\r\n    type: 'isLoading/disable',\r\n  }\r\n}\r\n\r\nexport const setData = (dataArray) => {\r\n  return {\r\n    type: 'tableData/setData',\r\n    payload: dataArray\r\n  }\r\n}\r\n\r\nexport const setSelectedRows = (idArray) => {\r\n  return {\r\n    type: 'selectedRows/idArray',\r\n    payload: idArray\r\n  }\r\n}\r\n\r\nconst isLoadingReducer = (state = initialState.isLoading, action) => {\r\n  switch (action.type) {\r\n    case 'isLoading/enable':\r\n      return state = true\r\n    case 'isLoading/disable':\r\n      return state = false\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst tableDataReducer = (state = initialState.tableData, action) => {\r\n  switch (action.type) {\r\n    case 'tableData/setData':\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst selectedRowsReducer = (state = initialState.selectedRows, action) => {\r\n  switch (action.type) {\r\n    case 'selectedRows/idArray':\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst reducers = combineReducers({\r\n  selectedRows: selectedRowsReducer,\r\n  tableData: tableDataReducer,\r\n  isLoading: isLoadingReducer\r\n})\r\n\r\nexport const store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import { DataGrid } from \"@material-ui/data-grid\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSelectedRows, setData, setLoading, unsetLoading } from '../store/store'\r\nimport './Table.css'\r\n\r\nfunction Table() {\r\n  //columns header setup for Material UI\r\n  const columns = [\r\n    { field: 'firstName', headerName: 'Имя', width: 130 },\r\n    { field: 'lastName', headerName: 'Фамилия', width: 130 },\r\n    { field: 'age', headerName: 'Возраст', width: 130 },\r\n  ]\r\n\r\n  // extracting state using helper-functions\r\n  const selectedRowsData = useSelector(state => state.selectedRows);\r\n  const tableData = useSelector(state => state.tableData);\r\n  const isLoading = useSelector(state => state.isLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  const getFirstNameById = (arr) => {\r\n    const namesArr = [];\r\n    tableData.forEach(el => {\r\n      if (arr.includes(el.id.toString())) {\r\n        namesArr.push(el.firstName);\r\n      }\r\n    })\r\n    return namesArr.join(', ');\r\n  }\r\n\r\n  const fetchTableData = () => {\r\n    dispatch(setLoading())\r\n    return fetch('https://raw.githubusercontent.com/Samgeven/foxford-test-task/master/src/data/users.json')\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      dispatch(setData(json))\r\n      dispatch(unsetLoading())\r\n    })\r\n  }\r\n\r\n  // fetching table data upon component mounted\r\n  useEffect(() => {\r\n    fetchTableData()\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Table\" style={{ height: 500, width: '100%' }}>\r\n      <h1>\r\n        Список сотрудников\r\n      </h1>\r\n      <DataGrid\r\n        rows={tableData}\r\n        columns={columns}\r\n        pageSize={5}\r\n        disableColumnMenu \r\n        checkboxSelection\r\n        hideFooterRowCount\r\n        loading={isLoading}\r\n        onSelectionChange={newSelection => {\r\n          dispatch(setSelectedRows(newSelection.rowIds))\r\n        }}\r\n        \r\n      />\r\n      <div className=\"Selected-names\">\r\n        {\r\n          selectedRowsData.length \r\n          ? `Пользователи: ${getFirstNameById(selectedRowsData)}` \r\n          : ''\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;","import Table from './components/Table'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store.js';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}